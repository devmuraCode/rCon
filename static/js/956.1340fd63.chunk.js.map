{"version":3,"file":"static/js/956.1340fd63.chunk.js","mappings":"sGAAe,SAASA,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,C,6FC0BA,EApB0C,SAAH,GAAqC,IAA/BE,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAY5D,OACE,iBAAKC,UAAU,eAAc,WAC3B,mBAAQC,QAbU,SAACC,GACrBA,EAAMC,kBAENL,EAAOD,EACT,EASmC,SAAC,YAChC,mBAAQI,QARU,SAACC,GACrB,IAAME,EAAMC,UAAY,GACxBN,GAAO,kBAAKF,GAAO,IAAEO,IAAAA,IACvB,EAKmC,SAAC,aAGtC,ECiDA,EAtEgB,WACd,MAAmCE,EAAAA,EAAAA,yBAAoC,GAA/DC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAErB,EAA4BH,EAAAA,EAAAA,2BAAqC,eAA1DI,EAAa,KAApB,QACA,MAA4BJ,EAAAA,EAAAA,2BAAqC,eAA1DK,EAAa,KAApB,QAEA,IAAMC,EAAgB,SAACf,GACrBa,EAAcb,EAChB,EACMgB,EAAe,SAAChB,GACpBc,EAAcd,EAChB,EACA,GAAgCiB,EAAAA,EAAAA,UAASP,GAAK,eAAvCQ,EAAQ,KAAEC,EAAW,KAC5B,GAAwBF,EAAAA,EAAAA,UAAS,IAAG,eAA7BG,EAAI,KAAEC,EAAO,KAYpB,OAJAC,EAAAA,EAAAA,YAAU,WACRH,EAAYT,EACd,GAAG,CAACA,KAGF,gBAAKP,UAAU,OAAM,UACnB,iBAAKA,UAAU,YAAW,WACxB,iBAAKA,UAAU,SAAQ,WACrB,kBACEA,UAAU,MACVoB,KAAK,OACLC,YAAY,iBACZC,MAAOL,EACPM,SAAU,SAACC,GACTN,EAAQM,EAAEC,OAAOH,OACjBN,EAAYT,EACd,KAEF,mBAAQmB,UAAWT,EAAMhB,QAzBZ,WACnB,IAAM0B,EACJZ,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUa,QAAS,EACnB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUc,QAAO,SAACC,GAAC,OAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG1B,OAAQa,CAAI,SACvCc,EACNf,EAAYW,EACd,EAmBwD3B,UAAU,MAAK,SAAC,eAIlE,iBAAKA,UAAU,QAAO,UACnBS,IAAa,wBAAI,eACjBD,IAAS,wBAAI,UACL,OAARO,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,KAAI,SAACnC,GAAO,OACrB,gBAAKG,UAAU,OAAM,UACnB,4BACE,iBAAKA,UAAU,MAAK,WAClB,wBAAY,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASO,OACd,wBAAY,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASoC,YAEhB,wBAAY,OAAPpC,QAAO,IAAPA,OAAO,EAAPA,EAASqC,gBAEd,SAAC,EAAW,CACVpC,OAAQc,EACRb,OAAQc,EACRhB,QAASA,GACJA,EAAQsC,SAZQtC,EAAQsC,IAe7B,WAMlB,C","sources":["../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","components/Contacts/ContactItem.tsx","components/Contacts/Contact.tsx"],"sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import React, { FC } from \"react\";\nimport { IContact } from \"../../models/IContact\";\n\ninterface ContactItemProps {\n  contact: IContact;\n  remove: (contact: IContact) => void;\n  update: (contact: IContact) => void;\n}\nconst ContactItem: FC<ContactItemProps> = ({ contact, remove, update }) => {\n  const handlerRemove = (event: React.MouseEvent) => {\n    event.stopPropagation();\n\n    remove(contact);\n  };\n\n  const handlerUpdate = (event: React.MouseEvent) => {\n    const fio = prompt() || \"\"\n    update({ ...contact, fio });\n  };\n\n  return (\n    <div className=\"button-group\">\n      <button onClick={handlerRemove}>Delete</button>\n      <button onClick={handlerUpdate}>Update</button>\n    </div>\n  );\n};\n\nexport default ContactItem;\n","import { useState, useEffect } from 'react'\nimport { IContact } from '../../models/IContact'\nimport { contactApi } from '../../services/ContactService'\nimport ContactItem from './ContactItem'\n\nconst Contact = () => {\n  const { data, error, isLoading } = contactApi.useFetchAllContactsQuery(1)\n\n  const [deleteContact, {}] = contactApi.useDeleteContactMutation()\n  const [updateContact, {}] = contactApi.useUpdateContactMutation()\n\n  const handlerRemove = (contact: IContact) => {\n    deleteContact(contact)\n  }\n  const handleUpdate = (contact: IContact) => {\n    updateContact(contact)\n  }\n  const [userList, setUserList] = useState(data)\n  const [text, setText] = useState('')\n  const handlerClick = () => {\n    const findUsers =\n      userList && userList?.length > 0\n        ? userList?.filter((u) => u?.fio === text)\n        : undefined\n    setUserList(findUsers)\n  }\n  useEffect(() => {\n    setUserList(data);\n  }, [data]);\n\n  return (\n    <div className=\"wrap\">\n      <div className=\"container\">\n        <div className=\"search\">\n          <input\n            className=\"inp\"\n            type=\"text\"\n            placeholder=\"Search Contact\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value)\n              setUserList(data)\n            }}\n          />\n          <button disabled={!text} onClick={handlerClick} className=\"btn\">\n            Search\n          </button>\n        </div>\n        <div className=\"block\">\n          {isLoading && <h1>Loading...</h1>}\n          {error && <h1>Error</h1>}\n          {userList?.map((contact) => (\n            <div className=\"card\" key={contact._id}>\n              <div>\n                <div className=\"fio\">\n                  <h1>{contact?.fio}</h1>\n                  <h2>{contact?.email}</h2>\n                </div>\n                <h3>{contact?.phone_number}</h3>\n\n                <ContactItem\n                  remove={handlerRemove}\n                  update={handleUpdate}\n                  contact={contact}\n                  key={contact._id}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Contact\n"],"names":["_objectDestructuringEmpty","obj","TypeError","contact","remove","update","className","onClick","event","stopPropagation","fio","prompt","contactApi","data","error","isLoading","deleteContact","updateContact","handlerRemove","handleUpdate","useState","userList","setUserList","text","setText","useEffect","type","placeholder","value","onChange","e","target","disabled","findUsers","length","filter","u","undefined","map","email","phone_number","_id"],"sourceRoot":""}